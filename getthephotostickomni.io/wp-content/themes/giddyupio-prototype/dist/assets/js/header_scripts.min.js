"use strict";
function copyDataTo_gu_qs(e, t) {
  for (var r = 0; r < requiredData.length; r++) {
    var n = requiredData[r],
      a = localToURLNameKeys[n] ? localToURLNameKeys[n] : n;
    (e[a] && "undefined" != e[a]) || !t[n] || (e[a] = t[n]),
      "user_id" === n && t[n] && (e[a] = t[n]);
  }
}
function gu_assign(e, t) {
  for (var r in t) r && t[r] && "undefined" != t[r] && (e[r] = t[r]);
  return e;
}
function getDomain() {
  var e = document.location.hostname.toLowerCase().split("."),
    t = e.slice(-2).join(".");
  return t;
}
function getCookieData() {
  var e = Object.create(null);
  try {
    for (var t = docCookies.keys(), r = 0; r < t.length; r++)
      t[r].startsWith(global_key_prefix) &&
        (e[t[r].replace(global_key_prefix, "")] = docCookies.getItem(t[r]));
    return e;
  } catch (n) {
    return e;
  }
}
function getGeoDataFromCookie() {
  var e = "GU_CF_GEO_IP",
    t = (document.cookie.match("(^|; )" + e + "=([^;]*)") || 0)[2] || null;
  return t ? JSON.parse(atob(t)) : null;
}
function addGeoDataTo_gu_qs() {
  var e = getGeoDataFromCookie();
  e &&
    "undefined" != typeof gu_qs &&
    (null !== e.country && (window.gu_qs.gucountry = e.country.toLowerCase()),
    null !== e.city && (window.gu_qs.city = e.city),
    null !== e.postalCode && (window.gu_qs.postalCode = e.postalCode),
    null !== e.region && (window.gu_qs.region = e.region),
    null !== e.regionCode && (window.gu_qs.regionCode = e.regionCode));
}
function getLocalStorageData() {
  var e = Object.create(null);
  try {
    if ("undefined" != typeof Storage)
      for (var t = 0; t < localStorage.length; t++) {
        var r = localStorage.key(t);
        r.startsWith(global_key_prefix) &&
          (e[r.replace(global_key_prefix, "")] = localStorage.getItem(r));
      }
  } catch (n) {
  } finally {
    return e;
  }
}
function getLocalData() {
  var e = getCookieData(),
    t = getLocalStorageData();
  return gu_assign(t, e);
}
function saveDataLocal(e) {
  delete e.referrer;
  for (var t = Object.keys(e), r = 0; r < t.length; r++)
    try {
      var n = t[r];
      n &&
        "undefined" != typeof e[n] &&
        "undefined" !== e[n] &&
        "undefined" != typeof Storage &&
        (localStorage[global_key_prefix + n] = e[n]);
    } catch (a) {}
}
function getCheckoutTokenFromURL() {
  try {
    for (
      var e = document.location.pathname.split("/"), t = 0;
      t < e.length;
      t++
    )
      if ("checkouts" == e[t].toLowerCase()) return e[t + 1];
  } catch (r) {}
  return null;
}
function gu_qs_to_str(e) {
  var t = encodeURIComponent,
    r = "";
  for (var n in e) "" != r && (r += "&"), (r += t(n) + "=" + t(e[n]));
  return "" != r && (r = "?" + r), r;
}
function gu_deparam(e) {
  var t = [];
  if ("" == e || "?" == e) return t;
  "?" == e[0] && (e = e.substr(1)), (e = e.split("&"));
  for (var r, t = {}, n = decodeURIComponent, a = e.length - 1; a >= 0; a--)
    (r = e[a].split("=")), (t[n(r[0])] = n(r[1]));
  return t;
}
function getQueryStringValue(e) {
  return decodeURIComponent(
    window.location.search.replace(
      new RegExp(
        "^(?:.*[&\\?]" +
          encodeURIComponent(e).replace(/[\.\+\*]/g, "\\$&") +
          "(?:\\=([^&]*))?)?.*$",
        "i"
      ),
      "$1"
    )
  );
}
function guSplitLangDescriptor(e) {
  var t = e.replace(new RegExp("\\*", "g"), "*").split("-");
  return 1 == t.length
    ? { language: "" == t[0] ? null : t[0], country: null, currency: null }
    : 2 == t.length
    ? {
        language: "" == t[0] ? null : t[0],
        country: "" == t[1] ? null : t[1],
        currency: null,
      }
    : 3 == t.length
    ? {
        language: "" == t[0] ? null : t[0],
        country: "" == t[1] ? null : t[1],
        currency: "" == t[2] ? null : t[2],
      }
    : (console.log("guSplitLangDescriptor: Invalid descriptor: " + e),
      { language: "en", country: "us", currency: "usd" });
}
function guMakeLangDescriptor(e, t) {
  return e + "-" + t;
}
function guValidateLanguage(e) {
  return "undefined" == typeof gu_default_country[e] ? "en" : e;
}
function guValidateCountry(e) {
  return "undefined" == typeof gu_currencies[e] ? "us" : e;
}
function guValidateCurrency(e) {
  for (var t in gu_currencies)
    if (e == gu_currencies[t]) return gu_currencies[t];
  return "usd";
}
function guDisplayDollarType() {
  return (
    "us" === guValidateCountry(gulangParts.country) &&
    setCountry !== guValidateCountry(gulangParts.country)
  );
}
function guSetIntl() {
  var e = (
    navigator.language ||
    navigator.userLanguage ||
    navigator.browserLanguage ||
    navigator.systemLanguage ||
    "en-us"
  ).toLowerCase();
  ("es-es_tradnl" != e && "es-419" != e && "es-xl" != e) || (e = "es-la");
  var t = guSplitLangDescriptor(e);
  null === t.country && (t.country = gu_default_country[t.language]),
    (t.language = guValidateLanguage(t.language)),
    (t.country = guValidateCountry(t.country)),
    (t.currency = gu_currencies[t.country]);
  var r = getGeoDataFromCookie(),
    n = null !== r && null !== r.country ? r.country.toLowerCase() : null,
    a =
      null !== n
        ? n
        : gu_language == t.language
        ? t.country
        : gu_default_country[gu_language],
    o = null !== n ? gu_currencies[n] : t.currency;
  if (
    ((navigator.userAgent.indexOf("MSIE") !== -1 ||
      navigator.appVersion.indexOf("Trident/") > -1) &&
      "undefined" == typeof gu_qs &&
      (window.gu_qs = []),
    "undefined" == typeof gu_qs.gulang)
  )
    (gu_language = t.language), (gu_country = a), (gu_currency = o);
  else {
    var u = guSplitLangDescriptor(gu_qs.gulang.toLowerCase());
    (gu_language =
      null === u.language || "*" == u.language
        ? t.language
        : guValidateLanguage(u.language)),
      (gu_country =
        null === u.country
          ? a
          : "*" == u.country
          ? a
          : guValidateCountry(u.country)),
      null === u.currency
        ? null !== u.country
          ? "us" === guValidateCountry(u.country) &&
            a !== guValidateCountry(u.country)
            ? ((gu_currency = "usd"), (gu_display_dollar_type = !0))
            : (gu_currency = gu_currencies[gu_country])
          : (gu_currency = o)
        : (gu_currency =
            "*" == u.currency ? o : guValidateCurrency(u.currency));
  }
  ("he" !== gu_language && "ar" !== gu_language) ||
    (document.documentElement.dir = "rtl"),
    "es" == gu_language &&
      "la" == gu_country &&
      (gu_country = "es-la" == e ? "mx" : a),
    "1" === gu_qs.gusd && (gu_currency = "usd"),
    (gu_languageAndCountry = guMakeLangDescriptor(gu_language, gu_country)),
    (gu_translationLanguage =
      "undefined" != typeof u
        ? guMakeLangDescriptor(u.language, u.country)
        : guMakeLangDescriptor(gu_language, gu_country)),
    (gu_qs.gulanguage = gu_language),
    (gu_qs.gucurrency = gu_currency),
    (gu_qs.gucountry = gu_country);
  var i = [
    "at",
    "be",
    "bg",
    "hr",
    "cy",
    "cz",
    "dk",
    "ee",
    "fi",
    "fr",
    "de",
    "gr",
    "hu",
    "ie",
    "it",
    "lv",
    "lt",
    "lu",
    "mt",
    "nl",
    "pl",
    "pt",
    "ro",
    "sk",
    "si",
    "es",
    "se",
    "gb",
  ];
  gu_eu_country = i.indexOf(gu_country) > -1;
  var l = ["aud", "cad", "nzd", "sgd", "twd", "hkd"];
  gu_dollar_currency = l.indexOf(gu_currency) > -1;
  var c = [
    "mx",
    "co",
    "ar",
    "pe",
    "ve",
    "cl",
    "ce",
    "gt",
    "ec",
    "cu",
    "bo",
    "ht",
    "do",
    "hn",
    "py",
    "pa",
    "sv",
    "ni",
    "cr",
    "uy",
    "jm",
    "tt",
    "gy",
    "sr",
    "bs",
    "bz",
    "bb",
    "lc",
    "vc",
    "gd",
    "ag",
    "dm",
    "kn",
  ];
  (gu_latam_country = c.indexOf(gu_country) > -1),
    console.log(
      "browserLang: " +
        e +
        " gulang: " +
        gu_qs.gulang +
        " gu_language: " +
        gu_language +
        " gu_country: " +
        gu_country +
        " gu_currency: " +
        gu_currency +
        " latAm: " +
        gu_latam_country,
      "ipGeoCountry: " + n
    );
}
function guTranslatePhrase(e) {
  gu_common.guTranslatePhrase(e);
}
function guFindPhrase(e) {
  gu_common.guFindPhrase(e);
}
function guRemoteDataRegisterCallback(e, t) {
  "undefined" == typeof t && (t = !1),
    gu_remote_data.loaded
      ? e()
      : t
      ? gu_remote_data.callbacks.unshift(e)
      : gu_remote_data.callbacks.push(e);
}
function guWaitForRemoteData() {
  if (
    null === gu_remote_data.productData ||
    null === gu_remote_data.currencyData ||
    null === gu_remote_data.shippingCountries
  ) {
    setTimeout(guWaitForRemoteData, 100);
  } else {
    gu_remote_data.loaded = !0;
    for (var e = 0; e < gu_remote_data.callbacks.length; e++)
      gu_remote_data.callbacks[e]();
  }
}
function gu_ajax_get(e, t) {
  var r = new XMLHttpRequest();
  (r.onreadystatechange = function () {
    if (4 === r.readyState && 200 === r.status) {
      try {
        var n = JSON.parse(r.responseText);
      } catch (a) {
        console.log(
          "Fetch Remote Data: JSON.parse error. url: " +
            e +
            " error message: " +
            a.message +
            " xmlhttp.responseText: " +
            r.responseText
        );
      }
      t(n);
    } else
      4 == r.readyState &&
        200 != r.status &&
        console.log(
          "Fetch Remote Data: xmlhttp error. url: " +
            e +
            " xmlhttp.status: " +
            r.status +
            " xmlhttp.responseText: " +
            r.responseText
        );
  }),
    r.open("GET", e, !0),
    r.send();
}
var _typeof =
    "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
      ? function (e) {
          return typeof e;
        }
      : function (e) {
          return e &&
            "function" == typeof Symbol &&
            e.constructor === Symbol &&
            e !== Symbol.prototype
            ? "symbol"
            : typeof e;
        },
  requiredData = ["aff_id", "sub_id", "req_id", "user_id"],
  global_key_prefix = "giddy-",
  checkout_token_name = "tkn",
  localData = Object.create(null),
  localToURLNameKeys = { user_id: "guu" };
String.prototype.startsWith ||
  (String.prototype.startsWith = function (e, t) {
    return this.substr(t || 0, e.length) === e;
  });
var docCookies = {
  getItem: function (e) {
    return e
      ? decodeURIComponent(
          document.cookie.replace(
            new RegExp(
              "(?:(?:^|.*;)\\s*" +
                encodeURIComponent(e).replace(/[\-\.\+\*]/g, "\\$&") +
                "\\s*\\=\\s*([^;]*).*$)|^.*$"
            ),
            "$1"
          )
        ) || null
      : null;
  },
  setItem: function (e, t, r, n, a, o) {
    if (!e || /^(?:expires|max\-age|path|domain|secure)$/i.test(e)) return !1;
    r || (r = 1 / 0);
    var u = "";
    if (r)
      switch (r.constructor) {
        case Number:
          u =
            r === 1 / 0
              ? "; expires=Fri, 31 Dec 9999 23:59:59 GMT"
              : "; max-age=" + r;
          break;
        case String:
          u = "; expires=" + r;
          break;
        case Date:
          u = "; expires=" + r.toUTCString();
      }
    return (
      (document.cookie =
        encodeURIComponent(e) +
        "=" +
        encodeURIComponent(t) +
        u +
        (a ? "; domain=" + a : "") +
        (n ? "; path=" + n : "") +
        (o ? "; secure" : "")),
      !0
    );
  },
  removeItem: function (e, t, r) {
    return (
      !!this.hasItem(e) &&
      ((document.cookie =
        encodeURIComponent(e) +
        "=; expires=Thu, 01 Jan 1970 00:00:00 GMT" +
        (r ? "; domain=" + r : "") +
        (t ? "; path=" + t : "")),
      !0)
    );
  },
  hasItem: function (e) {
    return (
      !(!e || /^(?:expires|max\-age|path|domain|secure)$/i.test(e)) &&
      new RegExp(
        "(?:^|;\\s*)" +
          encodeURIComponent(e).replace(/[\-\.\+\*]/g, "\\$&") +
          "\\s*\\="
      ).test(document.cookie)
    );
  },
  keys: function () {
    for (
      var e = document.cookie
          .replace(
            /((?:^|\s*;)[^\=]+)(?=;|$)|^\s*|\s*(?:\=[^;]*)?(?:\1|$)/g,
            ""
          )
          .split(/\s*(?:\=[^;]*)?;\s*/),
        t = e.length,
        r = 0;
      r < t;
      r++
    )
      e[r] = decodeURIComponent(e[r]);
    return e;
  },
};
!(function (e) {
  if (
    "object" ==
      ("undefined" == typeof exports ? "undefined" : _typeof(exports)) &&
    "undefined" != typeof module
  )
    module.exports = e();
  else if ("function" == typeof define && define.amd) define([], e);
  else {
    var t;
    (t =
      "undefined" != typeof window
        ? window
        : "undefined" != typeof global
        ? global
        : "undefined" != typeof self
        ? self
        : this),
      (t.uuidv4 = e());
  }
})(function () {
  return (function e(t, r, n) {
    function a(u, i) {
      if (!r[u]) {
        if (!t[u]) {
          var l = "function" == typeof require && require;
          if (!i && l) return l(u, !0);
          if (o) return o(u, !0);
          var c = new Error("Cannot find module '" + u + "'");
          throw ((c.code = "MODULE_NOT_FOUND"), c);
        }
        var s = (r[u] = { exports: {} });
        t[u][0].call(
          s.exports,
          function (e) {
            var r = t[u][1][e];
            return a(r ? r : e);
          },
          s,
          s.exports,
          e,
          t,
          r,
          n
        );
      }
      return r[u].exports;
    }
    for (
      var o = "function" == typeof require && require, u = 0;
      u < n.length;
      u++
    )
      a(n[u]);
    return a;
  })(
    {
      1: [
        function (e, t, r) {
          function n(e, t) {
            var r = t || 0,
              n = a;
            return (
              n[e[r++]] +
              n[e[r++]] +
              n[e[r++]] +
              n[e[r++]] +
              "-" +
              n[e[r++]] +
              n[e[r++]] +
              "-" +
              n[e[r++]] +
              n[e[r++]] +
              "-" +
              n[e[r++]] +
              n[e[r++]] +
              "-" +
              n[e[r++]] +
              n[e[r++]] +
              n[e[r++]] +
              n[e[r++]] +
              n[e[r++]] +
              n[e[r++]]
            );
          }
          for (var a = [], o = 0; o < 256; ++o)
            a[o] = (o + 256).toString(16).substr(1);
          t.exports = n;
        },
        {},
      ],
      2: [
        function (e, t, r) {
          (function (e) {
            var r,
              n = e.crypto || e.msCrypto;
            if (n && n.getRandomValues) {
              var a = new Uint8Array(16);
              r = function () {
                return n.getRandomValues(a), a;
              };
            }
            if (!r) {
              var o = new Array(16);
              r = function () {
                for (var e, t = 0; t < 16; t++)
                  0 === (3 & t) && (e = 4294967296 * Math.random()),
                    (o[t] = (e >>> ((3 & t) << 3)) & 255);
                return o;
              };
            }
            t.exports = r;
          }.call(
            this,
            "undefined" != typeof global
              ? global
              : "undefined" != typeof self
              ? self
              : "undefined" != typeof window
              ? window
              : {}
          ));
        },
        {},
      ],
      3: [
        function (e, t, r) {
          function n(e, t, r) {
            var n = (t && r) || 0;
            "string" == typeof e &&
              ((t = "binary" == e ? new Array(16) : null), (e = null)),
              (e = e || {});
            var u = e.random || (e.rng || a)();
            if (((u[6] = (15 & u[6]) | 64), (u[8] = (63 & u[8]) | 128), t))
              for (var i = 0; i < 16; ++i) t[n + i] = u[i];
            return t || o(u);
          }
          var a = e("./lib/rng"),
            o = e("./lib/bytesToUuid");
          t.exports = n;
        },
        { "./lib/bytesToUuid": 1, "./lib/rng": 2 },
      ],
    },
    {},
    [3]
  )(3);
}),
  addGeoDataTo_gu_qs();
var gu_language = "en",
  gu_country = "us",
  gu_currency = "usd",
  gu_languageAndCountry = "en-us",
  gu_translationLanguage = "en",
  gu_eu_country = !1,
  gu_latam_country = !1,
  gu_dollar_currency = !1,
  gu_display_dollar_type = !1,
  gu_default_country = {
    af: "za",
    ar: "sa",
    be: "by",
    bg: "bg",
    ca: "es",
    cs: "cz",
    da: "dk",
    de: "de",
    div: "mv",
    el: "gr",
    en: "us",
    es: "es",
    et: "ee",
    eu: "es",
    fa: "ir",
    fi: "fi",
    fil: "ph",
    fo: "fo",
    fr: "fr",
    gl: "es",
    gu: "in",
    he: "il",
    hi: "in",
    hr: "hr",
    hu: "hu",
    hy: "am",
    id: "id",
    is: "is",
    it: "it",
    ja: "jp",
    ka: "ge",
    kk: "kz",
    kn: "in",
    kok: "in",
    ko: "kr",
    ky: "kz",
    lt: "lt",
    lv: "lv",
    mk: "mk",
    mn: "mn",
    mr: "in",
    ms: "my",
    nb: "no",
    nl: "nl",
    nn: "no",
    no: "no",
    pa: "in",
    pl: "pl",
    pt: "pt",
    ro: "ro",
    ru: "ru",
    sa: "in",
    sk: "sk",
    sl: "si",
    sq: "al",
    sv: "se",
    sw: "ke",
    syr: "sy",
    ta: "in",
    te: "in",
    th: "th",
    tr: "tr",
    tt: "ru",
    uk: "ua",
    ur: "pk",
    vi: "vn",
    zh: "hk",
  },
  gu_currencies = {
    af: "afn",
    ax: "eur",
    al: "all",
    dz: "dzd",
    ad: "eur",
    ao: "aoa",
    ai: "xcd",
    ag: "xcd",
    ar: "ars",
    am: "amd",
    aw: "awg",
    au: "aud",
    at: "eur",
    az: "azn",
    bs: "bsd",
    bh: "bhd",
    bd: "bdt",
    bb: "bbd",
    by: "byn",
    be: "eur",
    bz: "bzd",
    bj: "xof",
    bm: "bmd",
    bt: "inr",
    bo: "bob",
    ba: "bam",
    bw: "bwp",
    bv: "nok",
    br: "brl",
    io: "usd",
    bn: "bnd",
    bg: "bgn",
    bf: "xof",
    bi: "bif",
    kh: "khr",
    ca: "cad",
    cv: "cve",
    ky: "kyd",
    cf: "xaf",
    td: "xaf",
    cl: "clp",
    cn: "cny",
    cx: "aud",
    cc: "aud",
    co: "cop",
    km: "kmf",
    cg: "xaf",
    cd: "cdf",
    ck: "nzd",
    cr: "crc",
    ci: "xof",
    hr: "hrk",
    cu: "cup",
    cw: "ang",
    cy: "eur",
    cz: "czk",
    dk: "dkk",
    dj: "djf",
    dm: "xcd",
    do: "dop",
    ec: "usd",
    eg: "egp",
    sv: "svc",
    gq: "xaf",
    er: "ern",
    ee: "eur",
    et: "etb",
    fk: "fkp",
    fo: "dkk",
    fj: "fjd",
    fi: "eur",
    fr: "eur",
    gf: "eur",
    pf: "xpf",
    tf: "eur",
    ga: "xaf",
    gm: "gmd",
    ge: "gel",
    de: "eur",
    gh: "ghs",
    gi: "gip",
    gr: "eur",
    gl: "dkk",
    gd: "xcd",
    gp: "eur",
    gt: "gtq",
    gg: "gbp",
    gn: "gnf",
    gw: "xof",
    gy: "gyd",
    ht: "usd",
    hm: "aud",
    va: "eur",
    hn: "hnl",
    hk: "hkd",
    hu: "huf",
    is: "isk",
    in: "inr",
    id: "idr",
    ir: "irr",
    iq: "iqd",
    ie: "eur",
    im: "gbp",
    il: "ils",
    it: "eur",
    jm: "jmd",
    jp: "jpy",
    je: "gbp",
    jo: "jod",
    kz: "kzt",
    ke: "kes",
    ki: "aud",
    kp: "kpw",
    xk: "eur",
    kw: "kwd",
    kg: "kgs",
    la: "lak",
    lv: "eur",
    lb: "lbp",
    ls: "lsl",
    lr: "lrd",
    ly: "lyd",
    li: "chf",
    lt: "eur",
    lu: "eur",
    mo: "mop",
    mk: "mkd",
    mg: "mga",
    mw: "mwk",
    my: "myr",
    mv: "mvr",
    ml: "xof",
    mt: "eur",
    mq: "eur",
    mr: "mro",
    mu: "mur",
    yt: "eur",
    mx: "mxn",
    md: "mdl",
    mc: "eur",
    mn: "mnt",
    me: "eur",
    ms: "xcd",
    ma: "mad",
    mz: "mzn",
    mm: "mmk",
    na: "nad",
    nr: "aud",
    np: "npr",
    nl: "eur",
    an: "ang",
    nc: "xpf",
    nz: "nzd",
    ni: "nio",
    ne: "xof",
    ng: "ngn",
    nu: "nzd",
    nf: "aud",
    no: "nok",
    om: "omr",
    pk: "pkr",
    ps: "egp",
    pa: "pab",
    pg: "pgk",
    py: "pyg",
    pe: "pen",
    ph: "php",
    pn: "nzd",
    pl: "pln",
    pt: "eur",
    qa: "qar",
    cm: "xaf",
    re: "eur",
    ro: "ron",
    ru: "rub",
    rw: "rwf",
    bl: "eur",
    sh: "shp",
    kn: "xcd",
    lc: "xcd",
    mf: "eur",
    pm: "eur",
    ws: "wst",
    sm: "eur",
    st: "std",
    sa: "sar",
    sn: "xof",
    rs: "rsd",
    sc: "scr",
    sl: "sll",
    sg: "sgd",
    sx: "ang",
    sk: "eur",
    si: "eur",
    sb: "sbd",
    so: "sos",
    za: "zar",
    gs: "fkp",
    kr: "krw",
    ss: "ssp",
    es: "eur",
    lk: "lkr",
    vc: "xcd",
    sd: "sdg",
    sr: "srd",
    sj: "nok",
    sz: "zar",
    se: "sek",
    ch: "chf",
    sy: "syp",
    tw: "twd",
    tj: "tjs",
    tz: "tzs",
    th: "thb",
    tl: "usd",
    tg: "xof",
    tk: "nzd",
    to: "top",
    tt: "ttd",
    tn: "tnd",
    tr: "try",
    tm: "tmt",
    tc: "usd",
    tv: "aud",
    ug: "ugx",
    ua: "uah",
    ae: "aed",
    gb: "gbp",
    us: "usd",
    um: "usd",
    uy: "uyu",
    uz: "uzs",
    vu: "vuv",
    ve: "ves",
    vn: "vnd",
    vg: "usd",
    wf: "xpf",
    eh: "mad",
    ye: "yer",
    zm: "zmw",
    zw: "zwl",
  };
guSetIntl();
var gu_common = (function () {
  function e(e) {
    var t = e.toLowerCase(),
      r = {
        a: "[àáâãäå]",
        ae: "æ",
        c: "ç",
        e: "[èéêë]",
        i: "[ìíîï]",
        n: "ñ",
        o: "[òóôõöō]",
        oe: "œ",
        u: "[ùúûűü]",
        y: "[ýÿ]",
      };
    for (var n in r) t = t.replace(new RegExp(r[n], "g"), n);
    return t;
  }
  function t() {
    for (
      var e = [
          "offer-section",
          "additional-offer",
          "total-bar",
          "checkout-section",
        ],
        t = $("#content-inner").children(),
        r = 0;
      r < t.length;
      r++
    )
      e.indexOf($(t[r]).attr("class")) === -1 &&
        ($(t[r]).hide(), $(t[r]).addClass("dtc-hidden"));
    $("body").addClass("direct-to-checkout");
  }
  function r(e) {
    var t = window.gu_currency,
      r = window.gu_languageAndCountry;
    ("string" != typeof e && "number" != typeof e) || (e = Big(e)),
      "usd" !== t &&
        (e = e
          .mul(Big("1.03"))
          .mul(Big(gu_remote_data.currencyData[t.toUpperCase()])));
    try {
      var n;
      if (
        ((n =
          0 === e.mod(1).cmp(Big(0))
            ? new Intl.NumberFormat(r, {
                style: "currency",
                currency: window.gu_currency,
                minimumFractionDigits: "0",
              }).format(e.toString())
            : new Intl.NumberFormat(r, {
                style: "currency",
                currency: t,
              }).format(e.toString())),
        gu_dollar_currency || gu_latam_country || gu_display_dollar_type)
      ) {
        var a = t.toUpperCase(),
          o = a.substring(0, 1);
        n.indexOf(a) === -1 && n.indexOf(o) === -1 && (n += " " + a);
      }
      return n;
    } catch (u) {
      return "$" + e;
    }
  }
  function n(e) {
    null !== e && "Total: " !== e && (e = e.trim());
    var t = "&amp;",
      r = "&gt;",
      n = "&lt;",
      a = "&nbsp;";
    return e
      .guReplaceAll(t, "&")
      .guReplaceAll(r, ">")
      .guReplaceAll(n, "<")
      .guReplaceAll(a, " ")
      .guReplaceAll('"', "'")
      .guReplaceAll('\\"', "'");
  }
  function a(e) {
    for (var t = n(e), r = 0; r < guActiveContentArray.length; r++) {
      var a = guActiveContentArray[r][t];
      if ("undefined" != typeof a) return a;
    }
    return e;
  }
  function o(e) {
    for (
      var t = e, r = !1, a = n(t), o = 0;
      o < guActiveContentArray.length;
      o++
    ) {
      var u = guActiveContentArray[o][a];
      if ("undefined" != typeof u) {
        console.log(
          "Found it in translation file " + o + ". key: " + a + " value: " + u
        ),
          (r = !0);
        break;
      }
    }
    r || console.log("Not found.");
  }
  function u(e) {
    for (
      var t = document.body.getElementsByTagName("*"), r = 0;
      r < t.length;
      r++
    ) {
      var n = t[r];
      n.innerHTML == e &&
        (console.log("Found! " + n.outerHTML),
        console.log("Parent: " + n.parentElement.outerHTML));
    }
  }
  function i() {
    "1" === gu_qs.gudtc && t();
  }
  function l() {
    var e = parseInt($("body").data("page-theme")),
      t = new URLSearchParams(window.location.search),
      r = $("body").hasClass("single-offer");
    if (t.has("gulayout") && r) {
      $("body").removeClass("layout-" + e),
        $("body").attr("data-page-theme", "1");
      var n = t.get("gulayout");
      console.log("* Alternative layout enabled:", n),
        $("body").addClass("layout-" + n);
      var a = parseInt(n.substring(0, 2), 10);
      $("[data-layout]").attr("data-layout", a);
    } else if (void 0 !== gu_qs.gulayout && "" !== gu_qs.gulayout) {
      $("body").removeClass("layout-" + e),
        $("body").attr("data-page-theme", "1");
      var o = gu_qs.gulayout;
      console.log("* Alternative layout enabled:", o),
        $("body").addClass("layout-" + o);
      var u = parseInt(o.substring(0, 2), 10);
      $("[data-layout]").attr("data-layout", u);
    } else
      e > 1 &&
        r &&
        $("[data-layout]").attr("data-layout", $("body").data("page-theme"));
  }
  function c() {
    var e = new URLSearchParams(window.location.search);
    if (e.has("guvariation")) {
      var t = 0,
        r = 0,
        n = !1,
        a = e.get("guvariation").toString(),
        o = a.split(",");
      $("[data-display-variation]").each(function () {
        var e = $(this).data("display-variation").toString();
        "false" === e
          ? $(this).hasClass("dtc-hidden") || n === !0
            ? (n = !0)
            : $("> *", $(this)).first().unwrap()
          : (o.indexOf(e) !== -1
              ? $(this).hasClass("dtc-hidden") || n === !0
                ? (n = !0)
                : ($(this).before("<!-- variation block " + e + " -->"),
                  $(this).after("<!-- /variation block -->"),
                  $("> *", $(this)).first().unwrap(),
                  t++)
              : ($(this).before(
                  "<!-- block removed for variation " + e + " -->"
                ),
                $(this).remove()),
            r++);
      }),
        n === !0
          ? console.error("DTC enabled - No block variations shown")
          : 0 !== r
          ? console.log(
              "Variation(s) enabled",
              o,
              "\r\n",
              t,
              "of",
              r,
              "tagged block(s) shown"
            )
          : console.error("No blocks are tagged for variations");
    } else {
      var u = [];
      $("[data-display-variation]").each(function () {
        u.push($(this).data("display-variation"));
      }),
        u.length > 0 &&
          console.log(
            "Variation block(s) hidden:",
            $("[data-display-variation]").length,
            "\r\n",
            "Block variation tags:",
            u
          );
    }
  }
  function s() {
    $(document).ready(c), $(document).ready(l), i();
  }
  return (
    (String.prototype.includes = function (e) {
      return this.indexOf(e) !== -1;
    }),
    Array.prototype.find ||
      (Array.prototype.find = function (e) {
        if (null == this)
          throw new TypeError(
            "Array.prototype.find called on null or undefined"
          );
        if ("function" != typeof e)
          throw new TypeError("predicate must be a function");
        for (
          var t, r = Object(this), n = r.length >>> 0, a = arguments[1], o = 0;
          o < n;
          o++
        )
          if (((t = r[o]), e.call(a, t, o, r))) return t;
      }),
    Element.prototype.closest ||
      (Element.prototype.matches ||
        (Element.prototype.matches =
          Element.prototype.msMatchesSelector ||
          Element.prototype.webkitMatchesSelector),
      (Element.prototype.closest = function (e) {
        var t = this,
          r = this;
        if (!document.documentElement.contains(t)) return null;
        do {
          if (r.matches(e)) return r;
          r = r.parentElement;
        } while (null !== r);
        return null;
      })),
    (String.prototype.guReplaceAll = function (e, t) {
      var r = this;
      return r.replace(new RegExp(e, "g"), t);
    }),
    {
      guTranslatePhrase: o,
      guFindPhrase: u,
      guDisplayCurrency: r,
      guSubstituteString: a,
      directToCheckout: t,
      removeDiacritics: e,
      init: s,
    }
  );
})();
document.addEventListener("DOMContentLoaded", function () {
  gu_common.init();
});
var gu_remote_data = {
    productData: null,
    currencyData: null,
    shippingCountries: null,
    allCountries: null,
    loaded: !1,
    callbacks: [],
  },
  guRemoteDataRetries = 0;
gu_ajax_get(
  site_vars.server_url +
    "/config/external-data/?offer=" +
    gu_offer +
    "&lng=" +
    gu_language,
  function (e) {
    (gu_remote_data.productData = e.products),
      (gu_remote_data.currencyData = e.rates),
      (gu_remote_data.shippingCountries = e.shippingCountries),
      (gu_remote_data.allCountries = e.allCountries);
  }
),
  guWaitForRemoteData(),
  (window.gu_products = {
    selectedUnits: [],
    packGuBundle: function (e) {
      var t = "";
      try {
        for (var r = 0; r < e.length; r++) {
          var n = "";
          (n =
            "bundle" == e[r].type
              ? "bundle:" + e[r].id + ";quantity:" + e[r].quantity
              : e[r].id + ":" + e[r].quantity),
            r != e.length - 1 && (n += ";"),
            (t += n);
        }
        return t;
      } catch (a) {
        return console.log(a), "";
      }
    },
    packSelectedUnits: function (e) {
      var t = "";
      try {
        for (var r = 0; r < e.length; r++) {
          for (
            var n =
                e[r].name +
                ";;;" +
                e[r].id +
                ";;;" +
                e[r].quantity +
                ";;;" +
                e[r].type +
                ";;;",
              a = 0;
            a < e[r].lineItems.length;
            a++
          )
            (n +=
              e[r].lineItems[a].productId +
              ";" +
              e[r].lineItems[a].variantName +
              ";" +
              e[r].lineItems[a].variantId +
              ";" +
              e[r].lineItems[a].quantity +
              ";" +
              e[r].lineItems[a].priceInfo.tp +
              ";" +
              e[r].lineItems[a].priceInfo.rp +
              ";" +
              e[r].lineItems[a].priceInfo.wp +
              ";" +
              e[r].lineItems[a].productTitle +
              ";" +
              e[r].lineItems[a].sku),
              a != e[r].lineItems.length - 1 && (n += ";;");
          r !== e.length - 1 && (n += ";;;;"), (t += n);
        }
        return t;
      } catch (o) {
        return console.log(o), "";
      }
    },
    unpackSelectedUnits: function (e) {
      for (var t = [], r = e.split(";;;;"), n = 0; n < r.length; n++) {
        var a = {},
          o = r[n].split(";;;");
        (a.name = o[0]),
          (a.id = o[1]),
          (a.quantity = o[2]),
          (a.type = o[3]),
          (a.lineItems = []);
        for (var u = o[4].split(";;"), i = 0; i < u.length; i++) {
          var l = {},
            c = u[i].split(";");
          (l.productId = c[0]),
            (l.variantName = c[1]),
            (l.variantId = c[2]),
            (l.quantity = c[3]),
            (l.priceInfo = { tp: c[4], rp: c[5], wp: c[6] }),
            (l.productTitle = c[7]),
            (l.sku = c[8]),
            a.lineItems.push(l);
        }
        t.push(a);
      }
      return t;
    },
    addSelectedUnit: function (e) {
      try {
        if (this.isValidUnit(e)) {
          for (var t = 0; t < e.lineItems.length; t++) {
            var r = e.lineItems[t].variantId,
              n = this.getParentAndVariant(r),
              a = this.getPriceInfoFromProduct(n, r);
            (e.lineItems[t].priceInfo = a),
              (e.lineItems[t].productTitle = n.title);
            for (var o = 0; o < n.variants.length; o++)
              n.variants[o].id == e.lineItems[t].variantId &&
                ((e.lineItems[t].sku = n.variants[o].sku),
                (e.lineItems[t].variantTitle = n.variants[o].title));
          }
          for (var u = -1, t = 0; t < this.selectedUnits.length; t++)
            if (this.selectedUnits[t].name == e.name) {
              u = t;
              break;
            }
          return (
            u != -1 ? (this.selectedUnits[u] = e) : this.selectedUnits.push(e),
            1
          );
        }
        return 0;
      } catch (i) {
        return console.log(i), 0;
      }
    },
    calculatePriceInfoFromProducts: function (e, t) {
      var r = Big(0),
        n = Big(0),
        a = Big(0),
        o = 0;
      try {
        if (!e) throw "Product is null";
        for (var u = 0; u < e.length; u++) {
          var i = this.getPriceInfoForProduct(e[u], t);
          (r = r.add(i.tp || 0)),
            (n = n.add(i.rp || 0)),
            (a = a.add(i.wp || 0)),
            o++;
        }
      } catch (l) {
        return (
          window._guLogger.error(
            "Shopify Product Error. Unable to get price info of product.",
            l,
            {
              productId: e[o],
              shopifyDomain: gu_shopify_domain,
              guFunctionName: "calculatePriceInfoFromProducts",
              severity: "critical",
            }
          ),
          null
        );
      }
      if (0 == o) return null;
      var c = r.div(Big(o)),
        s = n.sub(r);
      return { tp: r, rp: n, wp: a, up: c, dp: s };
    },
    calculatePriceInfoFromFragment: function (e, t) {
      for (var r = e.split(","), n = [], a = 0; a < r.length; a++)
        for (
          var o = r[a].split(":"), u = o[0], i = o[1], l = 0;
          l < parseInt(i, 10);
          l++
        )
          n.push(u);
      return this.calculatePriceInfoFromVariants(n, t);
    },
    calculatePriceInfoFromVariants: function (e, t) {
      for (var r = Big(0), n = Big(0), a = Big(0), o = 0; o < e.length; o++) {
        var u = this.getPriceInfoForVariant(e[o], t);
        (r = r.add(u.tp || 0)), (n = n.add(u.rp || 0)), (a = a.add(u.wp || 0));
      }
      return { tp: r, rp: n, wp: a };
    },
    getPriceInfoForVariants: function (e, t) {
      for (var r = [], n = 0; n < e.length; n++) {
        var a = this.getPriceInfoForVariant(e[n], t);
        r.push(a);
      }
      return r;
    },
    getPriceInfoForVariant: function (e, t) {
      var r = this.getParentAndVariant(e);
      return this.getPriceInfoFromProduct(r, t);
    },
    getPriceInfoForProduct: function (e, t) {
      var r = this.getProduct(e);
      return this.getPriceInfoFromProduct(r, t);
    },
    getPriceInfoFromProduct: function (e, t) {
      var r = "";
      "undefined" != typeof t && null !== t && "" !== t && (r = "_" + t);
      var n = "rp" + r,
        a = "wp" + r,
        o = {};
      try {
        if (!e) throw "Product is null.";
        return (
          null === this.searchTags(e.tags, a)
            ? (o.wp = Big(this.searchTags(e.tags, "wp")))
            : (o.wp = Big(this.searchTags(e.tags, a))),
          null === this.searchTags(e.tags, n)
            ? (o.rp = Big(this.searchTags(e.tags, "rp")))
            : (o.rp = Big(this.searchTags(e.tags, n))),
          (o.tp = Big(e.variants[0].price)),
          o
        );
      } catch (u) {
        return (
          window._guLogger.error(
            "Shopify Product Error. Variant not found in Shopify store.",
            u,
            {
              shopifyDomain: gu_shopify_domain,
              variantId: t,
              severity: "critical",
              guFunctionName: "getPriceInfoFromProduct",
            }
          ),
          null
        );
      }
    },
    getProduct: function (e) {
      if (null == gu_remote_data.productData) return null;
      for (var t = 0; t < gu_remote_data.productData.length; t++)
        if (gu_remote_data.productData[t].id == e) {
          var r = gu_remote_data.productData[t];
          return r;
        }
      return (
        window._guLogger.error(
          "Shopify Product Error. Product ID not found in Shopify store.",
          Error("Product ID not found"),
          {
            productId: e,
            shopifyDomain: gu_shopify_domain,
            severity: "critical",
          }
        ),
        null
      );
    },
    getVariantByTitle: function (e, t) {
      if (null == gu_remote_data.productData) return null;
      for (var r = this.getProduct(e), n = 0; n < r.variants.length; n++)
        if (r.variants[n].title == t) return r.variants[n];
      return null;
    },
    getColorVariant: function (e, t) {
      if (null == gu_remote_data.productData) return null;
      for (var r = this.getProduct(e), n = 0; n < r.variants.length; n++)
        if (
          r.variants[n].option1 == t ||
          r.variants[n].option2 == t ||
          r.variants[n].option3 == t
        )
          return r.variants[n];
      return null;
    },
    getFirstVariant: function (e) {
      if (null == gu_remote_data.productData) return null;
      for (var t = this.getProduct(e), r = 0; r < t.variants.length; r++)
        if (1 == t.variants[r].position) return t.variants[r];
      return null;
    },
    getParentAndVariant: function (e) {
      if (null == gu_remote_data.productData) return null;
      for (var t = 0; t < gu_remote_data.productData.length; t++)
        for (
          var r = gu_remote_data.productData[t], n = 0;
          n < gu_remote_data.productData[t].variants.length;
          n++
        )
          if (gu_remote_data.productData[t].variants[n].id === e) {
            gu_remote_data.productData[t].variants[n];
            return r;
          }
      return null;
    },
    getVariant: function (e) {
      if (null == gu_remote_data.productData) return null;
      for (var t = 0; t < gu_remote_data.productData.length; t++)
        for (var r = 0; r < gu_remote_data.productData[t].variants.length; r++)
          if (gu_remote_data.productData[t].variants[r].id == e)
            return gu_remote_data.productData[t].variants[r];
      return null;
    },
    isValidUnit: function (e) {
      if ("undefined" == typeof e.name || null == e.name || 0 === e.name.length)
        return !1;
      if ("undefined" == typeof e.id || null == e.id || 0 === e.id.length)
        return !1;
      if (
        "undefined" == typeof e.lineItems ||
        null == e.lineItems ||
        0 === e.lineItems.length
      )
        return !1;
      for (var t = 0; t < e.lineItems.length; t++)
        if (!this.isValidLineItem(e.lineItems[t])) return !1;
      return !0;
    },
    isValidLineItem: function (e) {
      return (
        !(
          "undefined" == typeof e.productId ||
          null == e.productId ||
          e.productId <= 0
        ) &&
        "undefined" != typeof e.variantName &&
        null != e.variantName &&
        0 != e.variantName.length &&
        !(
          "undefined" == typeof e.quantity ||
          null == e.quantity ||
          e.quantity <= 0
        )
      );
    },
    searchTags: function (e, t) {
      for (var r = 0; r < e.length; r++)
        try {
          var n = e[r].toLowerCase().replace(/\s/g, "");
          if (n.startsWith(t.toLowerCase() + ":")) {
            var a = n.indexOf(":") + 1;
            return n.length == a ? "" : n.slice(a);
          }
        } catch (o) {}
      return null;
    },
  }),
  (String.prototype.startsWith = function (e) {
    return 0 === this.indexOf(e);
  });
